const options=[{name:"radius",identifier:"radius-",defaultValue:"300px",extractionFunction:function(a){const b=a.replace(this.identifier,""),c={};return c.radiusValue=parseFloat(b.match(/[0-9]/gm).join("")),c.radiusUnit=b.match(/[a-z]/gm).join(""),c}},{name:"userLetterSpacing",identifier:"letter-spacing-",defaultValue:0,extractionFunction:function(a){return parseFloat(a.replace(this.identifier,""))}},{name:"userWordSpacing",identifier:"word-spacing-",defaultValue:0,extractionFunction:function(a){return parseFloat(a.replace(this.identifier,""))}},{name:"underneath",identifier:"underneath",defaultValue:!1,extractionFunction:function(){return!0}},{name:"offset",identifier:"offset-",defaultValue:1,extractionFunction:function(a){return parseFloat(a.replace(this.identifier,""))}}];class Arctxt{constructor(a){this.DOM=a,this.letters=a.innerHTML.split("")}configreDefaults(){this.options={},options.forEach(a=>{let b=!1;this.DOM.classList.forEach(c=>{if(-1!==c.indexOf(a.identifier)){const d=a.extractionFunction(c,a.identifier);this.options[a.name]=d,b=!0}}),b||(this.options[a.name]=a.defaultValue)})}checkUnderneath(){this.options.underneath&&this.letters.reverse()}calculateWordSpacing(){const a=getComputedStyle(this.DOM).getPropertyValue("width").replace("px","");this.defaultWordSpacing=a/26}getWidth(){const{radius:{radiusValue:a,radiusUnit:b}}=this.options;return 2*a+b}getHeight(){const{radius:{radiusValue:a,radiusUnit:b}}=this.options;return 2*a+b}load(){const a=document.createElement("div");a.style.width=this.getWidth(),a.style.height=this.getHeight(),this.DOM.append(a),this.letterElements=[],this.letters.forEach(b=>{const c=document.createElement("span");c.innerText=b,this.letterElements.push(c),a.append(c)})}getCharacterDimensions(){this.letterElements.map(a=>(a.characterWidth=parseFloat(getComputedStyle(a).getPropertyValue("width").replace("px","")),a.characterHeight=parseFloat(getComputedStyle(a).getPropertyValue("height").replace("px","")),a))}calculateStepAngles(){let a=0;const b=this.options.radius.radiusValue;this.letterElements.map((c,d)=>{if(" "===c.innerText)return c.stepAngle=this.defaultWordSpacing+this.options.userWordSpacing,c;const e=c.characterWidth,f=c.characterHeight;let g=0,h=0;this.letterElements[d+1]&&(g=this.letterElements[d+1].characterWidth,h=this.letterElements[d+1].characterHeight);const i=this.toDeg(Math.atan(e/2/(b-f/2))),j=this.toDeg(Math.atan(g/2/(b-h/2))),k=i+j+this.options.userLetterSpacing;return a+=k,c.stepAngle=k,c}),this.totalAngle=a}toRad(a){return a*Math.PI/180}toDeg(a){return 180*a/Math.PI}loadArcValues(){const a=this.options.radius.radiusValue;let b=90+this.options.offset;b-=this.totalAngle/2;let c=90;this.options.underneath&&(b-=180,c+=180),this.letterElements.forEach(d=>{const e=d.stepAngle;d.style.top=`calc(50% - ${a*Math.sin(this.toRad(b))}px)`,d.style.left=`calc(50% - ${a*Math.cos(this.toRad(b))}px)`,d.style.transform=`translate(-50%,-50%) rotateZ(${b-c}deg)`,b+=e})}clearDOM(){this.DOM.innerText=""}activate(){this.configreDefaults(),this.checkUnderneath(),this.calculateWordSpacing(),this.clearDOM(),this.load(),this.getCharacterDimensions(),this.calculateStepAngles(),this.loadArcValues()}}window.onload=()=>{arctxt()};const arctxt=()=>{const a=document.getElementsByClassName("arctxt"),b=Array.from(a);b.forEach(a=>{const b=new Arctxt(a);b.activate()})};